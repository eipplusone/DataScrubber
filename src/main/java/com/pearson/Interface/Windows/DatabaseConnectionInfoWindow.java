package com.pearson.Interface.Windows;

import com.pearson.Database.SQL.Database;
import com.pearson.Interface.DatabaseConnectionInfo;
import com.pearson.Interface.UIManager;
import com.pearson.Utilities.Constants;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.swing.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 * @author Ruslan Kiselev, Jia Ma
 */
public class DatabaseConnectionInfoWindow extends JDialog {

    private static Logger logger = LoggerFactory.getLogger(DatabaseConnectionInfoWindow.class.getName());

    private DatabaseConnectionInfo currentConnection;
    private int returnValue;

    /**
     * Creates new form NewMaskingSet
     */
    public DatabaseConnectionInfoWindow() {
        initComponents();

        // if we are in development, use the localhost as the sqlserver
        if (Constants.IN_DEVELOPMENT) {
            HostNameField.setText("localhost");
            UserNameField.setText("root");
//            PasswordField.setText("root");
            DefaultSchemaField.setText("sakila");
            okButtonPressed();
        }
        // otherwise use the previous setting entered by the user
        else {
            HostNameField.setText(UIManager.getCurrentConnection().getUrl());
            UserNameField.setText(UIManager.getCurrentConnection().getUsername());
            PasswordField.setText(UIManager.getCurrentConnection().getPassword());
            DefaultSchemaField.setText(UIManager.getCurrentConnection().getDefaultSchema());
        }

        setModalityType(ModalityType.APPLICATION_MODAL);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        UserNameLabel = new javax.swing.JLabel();
        UserNameField = new javax.swing.JTextField();
        PasswordLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        HostNameLabel = new javax.swing.JLabel();
        HostNameField = new javax.swing.JTextField();
        PortField = new javax.swing.JTextField();
        PortLabel = new javax.swing.JLabel();
        DefaultSchemaLabel = new javax.swing.JLabel();
        DefaultSchemaField = new javax.swing.JTextField();
        TestConnectionButton = new javax.swing.JButton();
        OKButton = new javax.swing.JButton();
        ConnectionDetailsLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );

        // makes sure that we just close on exit
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);


        // set the label and button names
        UserNameLabel.setText("User Name:");
        PasswordLabel.setText("Password:");
        HostNameLabel.setText("Host Name:");
        PortLabel.setText("Port:");
        DefaultSchemaLabel.setText("Default Schema:");
        TestConnectionButton.setText("Test Connection");
        OKButton.setText("OK");
        ConnectionDetailsLabel.setText("Connection Details");
        PortField.setText("3306");


        // two buttons - test connection and ok
        TestConnectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestConnectionButtonActionPerformed(evt);
            }
        });

        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        // netbeans gui madness
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGap(210, 210, 210)
                                                .addComponent(ConnectionDetailsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(203, 203, 203))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addComponent(TestConnectionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGap(121, 121, 121)
                                                                .addComponent(OKButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                                                .addGap(55, 55, 55)
                                                                                .addComponent(PortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                                                .addGap(23, 23, 23)
                                                                                .addComponent(HostNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                                                .addGap(23, 23, 23)
                                                                                .addComponent(UserNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                                                .addGap(29, 29, 29)
                                                                                .addComponent(PasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addComponent(DefaultSchemaLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(66, 66, 66)
                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(PasswordField)
                                                                        .addComponent(UserNameField)
                                                                        .addComponent(DefaultSchemaField, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(HostNameField, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(PortField, javax.swing.GroupLayout.Alignment.TRAILING))
                                                                .addGap(43, 43, 43)))
                                                .addGap(78, 78, 78))))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(ConnectionDetailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(HostNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(HostNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(PortField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(PortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(UserNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(UserNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(DefaultSchemaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(DefaultSchemaField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(TestConnectionButton)
                                        .addComponent(OKButton))
                                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                returnValue = UIManager.CLOSED;
            }
        });

        pack();
        setLocationRelativeTo(null);
    }


    private void TestConnectionButtonActionPerformed(java.awt.event.ActionEvent evt) {

        if (isInputNotEmpty()) {
            fetch();
            if (Database.isConnectionValid(currentConnection)) {
                JOptionPane.showMessageDialog(null, "Connection has been established");
            } else {
                JOptionPane.showMessageDialog(null, "Couldn't establish the connection.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter connection information");
        }

    }

    public int getReturnValue() {
        return returnValue;
    }

    /**
     * Used to check non-emptiness of the input inside the connection info window. Allows for an empty password
     *
     * @return
     */
    private boolean isInputNotEmpty() {
        String username = UserNameField.getText();
        if (username.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter the username");
            return false;
        }

        String url = HostNameField.getText();
        if (url.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter the url");
            return false;
        }

        String defaultSchema = DefaultSchemaField.getText();
        if (defaultSchema.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter the database name");
            return false;
        }

        return true;
    }

    public void fetch() {

        String username = UserNameField.getText();
        String password = String.valueOf(PasswordField.getPassword());
        String port = PortField.getText();
        String url = HostNameField.getText();
        String defaultSchema = DefaultSchemaField.getText();

        DatabaseConnectionInfo.Builder builder = new DatabaseConnectionInfo.Builder(username,
                password, url).defaultSchema(defaultSchema).port(port);

        currentConnection = builder.build();
    }

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {
        //test connection and open the createNewRuleWindow
        okButtonPressed();

    }

    private void okButtonPressed() {

        if (isInputNotEmpty()) {
            logger.info("Input is not empty");

            fetch();

            if (Database.isConnectionValid(currentConnection)) {

                UIManager.setCurrentConnection(currentConnection);

                logger.info("Disposing connection info window");
                dispose();

            } else {

                JOptionPane.showMessageDialog(null, "Error - couldn't establish the connection. Please check setting above");
            }
        }
    }


    private javax.swing.JLabel ConnectionDetailsLabel;
    private javax.swing.JTextField DefaultSchemaField;
    private javax.swing.JLabel DefaultSchemaLabel;
    private javax.swing.JTextField HostNameField;
    private javax.swing.JLabel HostNameLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JTextField PortField;
    private javax.swing.JLabel PortLabel;
    private javax.swing.JButton TestConnectionButton;
    private javax.swing.JTextField UserNameField;
    private javax.swing.JLabel UserNameLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
}
