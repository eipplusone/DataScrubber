/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pearson.Interface;
import com.pearson.SQL.Database;
import com.pearson.Interface.Models.ItemsSelectedTableModel;
import com.pearson.SQL.Column;
import noNamespace.*;
import com.pearson.SQL.MySQLTable;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.tree.TreeSelectionModel;
import noNamespace.RulesDocument.Rules;
import org.apache.xmlbeans.XmlException;
import com.pearson.Rules.Substitution;


/**
 *
 * @author UMA99J5
 */
public class NewSubstitutionRuleWindow extends javax.swing.JFrame {

    /**
     * Creates new form NewSubstitutionRule
     */
    Database database;
    ArrayList<String> tableNames =  new ArrayList<>();
    ArrayList<String> columnNames = new ArrayList<>();
    DefaultListModel<String> listModel;
    boolean firstTimeSelected = true;
    DependenciesType dependency;
    
    /** Similar to new shuffle rule window, this method throws an exception, 
     * by the time when users open the new substitution rule window, 
     * database information has been passed over. **/
    
    public NewSubstitutionRuleWindow() throws SQLException {
        database = new Database(UIManager.getDefaultSchema(), UIManager.getUsername(),
                UIManager.getPassword(), "jdbc:mysql://" + UIManager.getUrl()
                + ":" + UIManager.getPort());

        database.fillTables();
        // end of preparing database structure

        for (MySQLTable table : database.tables.values()) {
            tableNames.add(table.getTableName());
        }

        listModel = new DefaultListModel();
        initComponents();
        tablesSelectedTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tableScrollPane = new javax.swing.JScrollPane();
        tablesSelectedTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        ColumnsComboBox = new javax.swing.JComboBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ColumnsSelectedList = new javax.swing.JList();
        DeleteButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        createSubstitutionRule = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("New Substitution Rule");

        jLabel2.setText("Select table");

        tablesSelectedTable.setModel(new com.pearson.Interface.Models.ItemsSelectedTableModel(tableNames));
        tablesSelectedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablesSelectedTableMouseClicked(evt);
            }
        });
        tablesSelectedTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tablesSelectedTableComponentShown(evt);
            }
        });
        tableScrollPane.setViewportView(tablesSelectedTable);

        jLabel4.setText("Selected Columns");

        ColumnsComboBox.setModel(new javax.swing.DefaultComboBoxModel());
        ColumnsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColumnsComboBoxActionPerformed(evt);
            }
        });

        ColumnsSelectedList.setModel(listModel);
        ColumnsSelectedList.setBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane1.setViewportView(ColumnsSelectedList);

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(DeleteButton)
                .addGap(0, 394, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(292, Short.MAX_VALUE)
                .addComponent(DeleteButton)
                .addGap(32, 32, 32))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 59, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("List of Columns", jPanel4);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        createSubstitutionRule.setText("Create Substitution Rule");
        createSubstitutionRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createSubstitutionRuleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(124, 124, 124))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(202, 202, 202)
                        .addComponent(createSubstitutionRule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(115, 115, 115))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(378, 378, 378))
                    .addComponent(ColumnsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1)
                                .addGap(50, 50, 50))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))))
                        .addComponent(ColumnsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTabbedPane2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(createSubstitutionRule))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Exit
       dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void tablesSelectedTableComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tablesSelectedTableComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_tablesSelectedTableComponentShown

    private void tablesSelectedTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablesSelectedTableMouseClicked
        // select table from the window
        firstTimeSelected = true;
        ColumnsComboBox.removeAllItems();
        listModel.removeAllElements();
        int row = tablesSelectedTable.rowAtPoint(evt.getPoint());
        String tableSelected = tableNames.get(row);
        for (Column column : database.tables.get(tableSelected).columns) {
            ColumnsComboBox.addItem(column.name);
        }
        firstTimeSelected = false;
    }//GEN-LAST:event_tablesSelectedTableMouseClicked

    private void ColumnsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColumnsComboBoxActionPerformed
        // TODO add your handling code here:
        if (!firstTimeSelected) {
            String column = (String) ColumnsComboBox.getSelectedItem();
            listModel.addElement(column);
        }
    }//GEN-LAST:event_ColumnsComboBoxActionPerformed

    private void createSubstitutionRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createSubstitutionRuleActionPerformed
        // create new substitution rule
        ArrayList<String> columns = new ArrayList<>();

        // get all column names user has entered
        for (Object column : listModel.toArray()) {
            columns.add((String) column);
        }

        Rules rulesInSet = XMLInterface.getSetDocument().getMaskingSet().getRules();

        // build the rule according to information from this window
        Rule newRule = rulesInSet.addNewRule();
        SubstitutionRule newRuleSubstitution = newRule.addNewSubstitute();
        // add new columns
        for(String column : columns){
            newRuleSubstitution.setColumn(column);
        }
        String targetTable = tableNames.get(tablesSelectedTable.getSelectedRow());
        newRule.setTarget(targetTable);
        newRule.setId(rulesInSet.getRuleArray().length + "");
        newRule.setRuleType(RuleType.SUBSTITUTION);

        // let other windows know that masking set has change

        try {
            XMLInterface.saveFile();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Couldn't create the rule - please see the log file");
        }

        UIManager.update();

        dispose();
    }//GEN-LAST:event_createSubstitutionRuleActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        listModel.removeElement(ColumnsSelectedList.getSelectedValue().toString());
    }//GEN-LAST:event_DeleteButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewSubstitutionRuleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewSubstitutionRuleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewSubstitutionRuleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewSubstitutionRuleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new NewSubstitutionRuleWindow().setVisible(true);
        
                } catch(SQLException ex){
                    Logger.getLogger(NewShuffleRuleWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                    
                
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ColumnsComboBox;
    private javax.swing.JList ColumnsSelectedList;
    private javax.swing.JButton DeleteButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton createSubstitutionRule;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JTable tablesSelectedTable;
    // End of variables declaration//GEN-END:variables

    
}
